{
  "tasks": {
    "clean": "rm -rf dist dist_bundle",
    "check": "find web common server plugs cmd plug-api plugos -name '*.ts*' | xargs deno check",
    "test": "deno test -A --unstable",
    "build": "deno run -A --unstable build_plugs.ts && deno run -A --unstable build_web.ts",
    "plugs": "deno run -A --unstable build_plugs.ts",
    "watch-web": "deno run -A --unstable --check build_web.ts --watch",
    "server": "deno run -A --unstable --check silverbullet.ts",
    "watch-server": "deno run -A --unstable --check --watch silverbullet.ts",
    "watch-plugs": "deno run -A --unstable --check build_plugs.ts -w",
    "compile": "mkdir -p bin && deno compile -A --unstable --include plugos/environments/sandbox_worker.ts --include plugos/sqlite/worker.ts -o bin/silverbullet silverbullet.ts",
    "server:dist:linux-x86_64": "deno compile -A --unstable --target x86_64-unknown-linux-gnu --include plugos/environments/sandbox_worker.ts --include plugos/sqlite/worker.ts silverbullet.ts -o silverbullet && zip silverbullet-server-linux-x86_64.zip silverbullet",
    "server:dist:darwin-x86_64": "deno compile -A --unstable --target x86_64-apple-darwin --include plugos/environments/sandbox_worker.ts --include plugos/sqlite/worker.ts silverbullet.ts -o silverbullet && zip silverbullet-server-darwin-x86_64.zip silverbullet",
    "server:dist:darwin-aarch64": "deno compile -A --unstable --target aarch64-apple-darwin --include plugos/environments/sandbox_worker.ts --include plugos/sqlite/worker.ts silverbullet.ts -o silverbullet && zip silverbullet-server-darwin-aarch64.zip silverbullet",
    "server:dist:windows-x86_64": "deno compile -A --unstable --target x86_64-pc-windows-msvc --include plugos/environments/sandbox_worker.ts --include plugos/sqlite/worker.ts silverbullet.ts -o silverbullet.exe && zip silverbullet-server-windows-x86_64.zip silverbullet.exe",
    // Regenerates some bundle files (checked into the repo)
    // Install lezer-generator with "npm install -g @lezer/generator"
    "generate": "lezer-generator common/markdown_parser/query.grammar -o common/markdown_parser/parse-query.js",
    // Install npm dependencies for desktop app
    "desktop:deps": "cd desktop && npm install",
    // Run the desktop app for local development
    "desktop:run": "cd desktop && npm start",
    // Build the desktop app as a package for this platform
    "desktop:build": "deno task build && deno task compile && cd desktop && npm run make",
    // Mobile
    "mobile:deps": "cd mobile && npm install",
    "mobile:clean-build": "deno task clean && deno task plugs && deno run -A --unstable --check build_mobile.ts && cd mobile && npx cap sync",
    "mobile:build": "deno run -A --unstable --check build_mobile.ts && cd mobile && npx cap copy"
  },

  "compilerOptions": {
    "lib": ["dom", "dom.iterable", "dom.asynciterable", "deno.ns"],
    "jsx": "react-jsx",
    "jsxImportSource": "https://esm.sh/preact@10.11.1"
  },
  "importMap": "import_map.json",
  "lint": {
    "files": {
      "exclude": [
        "dist",
        "dist_bundle"
      ]
    },
    "rules": {
      "exclude": ["no-explicit-any"]
    }
  },
  "test": {
    "files": {
      "exclude": ["plugos/forked", "plugos/sqlite/deno-sqlite"]
    }
  },
  "fmt": {
    "files": {
      "exclude": [
        "dist",
        "dist_bundle",
        "desktop",
        "mobile",
        "pages",
        "website",
        "website_build",
        "test_space",
        "plugos/environments/worker_bundle.json",
        "README.md"
      ]
    }
  }
}
